//!============================================================
//!
//!  @file    : DungeonEnemy.h
//!  @brief   : エネミークラスのヘッダーファイル
//!  @author  : 原田 陽央
//!  @details : ダンジョンをプレイ中のエネミークラスの実装
//!             ゲームオブジェクトクラスを継承
//!
//!============================================================
#pragma once


//============================================================
//　インクルード
//============================================================
#include "GameObject.h"
#include "AnimationModel.h"
#include "DungeonMap.h"


//!===========================================================
//! @class DungeonEnemy
//! @brief   : エネミー実装のクラス
//!===========================================================
class DungeonEnemy : public GameObject
{
public:

	//!-------------------------------------------------------
	//! @fn      : Init()
	//! @brief   : 初期化をする
	//! @param   : なし
	//! @return  : なし
	//! @details : 初期化処理
	//!            アニメーションモデルの生成
	//!            シェーダーの設定
	//!            シーンの情報の取得
	//!            使用するオーディオのロード
	//!-------------------------------------------------------
	void Init();

	//!-------------------------------------------------------
	//! @fn      : Uninit()
	//! @brief   : 終了処理をする
	//! @param   : なし
	//! @return  : なし
	//! @details : 実装内容なし
	//!-------------------------------------------------------
	void Uninit();

	//!-------------------------------------------------------
	//! @fn      : Update()
	//! @brief   : 更新をする
	//! @param   : なし
	//! @return  : なし
	//! @details : キー入力での移動
	//!            他オブジェクトとの当たり判定
	//!            アニメーションモデルの更新
	//!-------------------------------------------------------
	void Update();

	//!-------------------------------------------------------
	//! @fn      : Draw()
	//! @brief   : 描画をする
	//! @param   : なし
	//! @return  : なし
	//! @details : シェーダーの設定
	//!            マトリクスの設定
	//!            モデルの描画
	//!-------------------------------------------------------
	void Draw();

	//!-------------------------------------------------------
	//! @fn      : SetMoveVector(int type)
	//! @brief   : 移動方向のセット
	//! @param   : type...移動したい方向のタイプ
	//! @return  : なし
	//! @details : 移動したい方向の設定の実装
	//!            type が0なら前、1なら後ろ
	//!            2なら右、3なら左方向に設定
	//!            4なら右前、5なら左前
	//!            6なら右後、7なら左後方向に設定
	//!-------------------------------------------------------
	void SetMoveVector(int type);

	//!-------------------------------------------------------
	//! @fn      : GetHitPoint()
	//! @brief   : プレイヤーのヒットポイントを取得する
	//! @param   : なし
	//! @return  : なし
	//! @details : 
	//!-------------------------------------------------------
	float GetHitPoint();

	//!-------------------------------------------------------
	//! @fn      : AfterMoveProcess()
	//! @brief   : 次のマスへ移動した後の処理
	//! @param   : なし
	//! @return  : なし
	//! @details : 
	//!-------------------------------------------------------
	void AfterMoveProcess();


private:

	//! アニメーションモデルを格納
	AnimationModel* aniModel;

	//! 前フレーム時の座標
	D3DXVECTOR3 prePosition;

	//! 移動中かどうか
	bool isMove;
	//! 移動時用
	int moveFrame;
	//! 移動にかかるフレーム数
	const int moveFrameMax = 20;
	//! 移動時用
	D3DXVECTOR3 move;

	//! アニメーション用
	int aniFrame;
	int aniType;

	//!  プレイヤーがどのマップ座標にいるか
	int xMapNumber;
	int zMapNumber;
	int xPreMapNumber;
	int zPreMapNumber;

	//! プレイヤーのステータス
	float hitPoint;

	//! ダンジョンマップ情報を保持
	DungeonMap* dungeonMap;
};